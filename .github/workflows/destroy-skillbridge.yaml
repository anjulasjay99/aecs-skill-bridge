name: Destroy SkillBridge Infrastructure

on:
    push:
        branches: [destroy]
    workflow_dispatch:

env:
    AWS_REGION: ap-southeast-1
    STACK_A: skillbridge-infra
    STACK_B: skillbridge-apigw
    CLUSTER_NAME: skillbridge-eks
    NAMESPACE: skillbridge

jobs:
    destroy:
        runs-on: ubuntu-latest

        steps:
            - name: üßæ Checkout Repository
              uses: actions/checkout@v4

            - name: ‚öôÔ∏è Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ env.AWS_REGION }}

            - name: üîç Verify AWS Identity
              run: aws sts get-caller-identity

            # 1Ô∏è‚É£ Clean up Kubernetes workloads before deleting the cluster
            - name: üßπ Cleanup Kubernetes resources (if cluster still exists)
              continue-on-error: true
              run: |
                  echo "üîé Checking if EKS cluster $CLUSTER_NAME exists..."
                  if aws eks describe-cluster --name $CLUSTER_NAME --region $AWS_REGION >/dev/null 2>&1; then
                    echo "‚úÖ Cluster found. Deleting Kubernetes resources..."
                    aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION
                    kubectl delete all --all -n $NAMESPACE --ignore-not-found
                    kubectl delete namespace $NAMESPACE --ignore-not-found
                    echo "‚úÖ K8s resources deleted."
                  else
                    echo "‚ÑπÔ∏è Cluster does not exist or already deleted."
                  fi

            # 2Ô∏è‚É£ Delete API Gateway stack first
            - name: ‚òÅÔ∏è Delete Stack B (API Gateway)
              run: |
                  echo "üß® Deleting CloudFormation stack: $STACK_B"
                  aws cloudformation delete-stack --stack-name $STACK_B --region $AWS_REGION || true
                  echo "‚è≥ Waiting for deletion of $STACK_B..."
                  aws cloudformation wait stack-delete-complete --stack-name $STACK_B --region $AWS_REGION || true
                  echo "‚úÖ Stack B ($STACK_B) deleted."

            # 3Ô∏è‚É£ Delete EKS & Infra stack
            - name: ‚òÅÔ∏è Delete Stack A (Infra)
              run: |
                  echo "üß® Deleting CloudFormation stack: $STACK_A"
                  aws cloudformation delete-stack --stack-name $STACK_A --region $AWS_REGION || true
                  echo "‚è≥ Waiting for deletion of $STACK_A..."
                  aws cloudformation wait stack-delete-complete --stack-name $STACK_A --region $AWS_REGION || true
                  echo "‚úÖ Stack A ($STACK_A) deleted."

            # 4Ô∏è‚É£ Optional final sweep: check for leftovers
            - name: üîé Verify deletion results
              run: |
                  echo "üîç Checking for leftover CloudFormation stacks..."
                  aws cloudformation list-stacks \
                    --stack-status-filter CREATE_COMPLETE UPDATE_COMPLETE DELETE_FAILED ROLLBACK_FAILED \
                    --region $AWS_REGION \
                    --query "StackSummaries[?contains(StackName, 'skillbridge')].[StackName, StackStatus]" \
                    --output table || true

                  echo "üîç Checking for ECR repositories..."
                  aws ecr describe-repositories --region $AWS_REGION \
                    --query "repositories[?contains(repositoryName, 'service')].[repositoryName]" \
                    --output table || echo "‚úÖ No ECR repositories found."

                  echo "üîç Checking for VPC leftovers..."
                  aws ec2 describe-vpcs --region $AWS_REGION \
                    --query "Vpcs[?contains(Tags[?Key=='Name'].Value | [0], 'skillbridge')].[VpcId,State]" \
                    --output table || echo "‚úÖ No VPCs found."

                  echo "‚úÖ Verification complete. SkillBridge environment destroyed."
