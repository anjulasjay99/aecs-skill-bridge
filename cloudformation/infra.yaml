AWSTemplateFormatVersion: "2010-09-09"
Description: SkillBridge EKS Infrastructure Stack - CloudFormation Template

Parameters:
    ClusterName:
        Type: String
        Default: skillbridge-eks
    NodeInstanceType:
        Type: String
        Default: t3.medium
    DesiredCapacity:
        Type: Number
        Default: 2
    MaxCapacity:
        Type: Number
        Default: 3
    MinCapacity:
        Type: Number
        Default: 1

Resources:
    # ---------------------------
    # Networking Layer (VPC)
    # ---------------------------
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.0.0.0/16
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-vpc"

    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-igw"

    AttachGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref VPC
            InternetGatewayId: !Ref InternetGateway

    # ---------------------------
    # Public Subnets
    # ---------------------------
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: 10.0.1.0/24
            AvailabilityZone: !Select [0, !GetAZs ""]
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-public-subnet-1"
                - Key: kubernetes.io/role/elb
                  Value: "1"
                - Key: !Sub "kubernetes.io/cluster/${ClusterName}"
                  Value: "shared"

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: 10.0.2.0/24
            AvailabilityZone: !Select [1, !GetAZs ""]
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-public-subnet-2"
                - Key: kubernetes.io/role/elb
                  Value: "1"
                - Key: !Sub "kubernetes.io/cluster/${ClusterName}"
                  Value: "shared"

    # ---------------------------
    # Private Subnets
    # ---------------------------
    PrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: 10.0.3.0/24
            AvailabilityZone: !Select [0, !GetAZs ""]
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-private-subnet-1"
                - Key: kubernetes.io/role/internal-elb
                  Value: "1"
                - Key: !Sub "kubernetes.io/cluster/${ClusterName}"
                  Value: "shared"

    PrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            CidrBlock: 10.0.4.0/24
            AvailabilityZone: !Select [1, !GetAZs ""]
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-private-subnet-2"
                - Key: kubernetes.io/role/internal-elb
                  Value: "1"
                - Key: !Sub "kubernetes.io/cluster/${ClusterName}"
                  Value: "shared"

    # ---------------------------
    # Routing
    # ---------------------------
    PublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-public-rt"

    PublicRoute:
        Type: AWS::EC2::Route
        DependsOn: AttachGateway
        Properties:
            RouteTableId: !Ref PublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet1
            RouteTableId: !Ref PublicRouteTable

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet2
            RouteTableId: !Ref PublicRouteTable

    # NAT Gateway
    NatEIP:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc

    NatGateway:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt NatEIP.AllocationId
            SubnetId: !Ref PublicSubnet1
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-natgw"

    PrivateRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-private-rt"

    PrivateRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref NatGateway

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PrivateSubnet1
            RouteTableId: !Ref PrivateRouteTable

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PrivateSubnet2
            RouteTableId: !Ref PrivateRouteTable

    # ---------------------------
    # EKS Cluster
    # ---------------------------
    EKSClusterRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: eks.amazonaws.com
                      Action: sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-cluster-role"

    EKSCluster:
        Type: AWS::EKS::Cluster
        Properties:
            Name: !Ref ClusterName
            Version: "1.30"
            RoleArn: !GetAtt EKSClusterRole.Arn
            ResourcesVpcConfig:
                SubnetIds:
                    - !Ref PublicSubnet1
                    - !Ref PublicSubnet2
                    - !Ref PrivateSubnet1
                    - !Ref PrivateSubnet2
                EndpointPublicAccess: true
                EndpointPrivateAccess: false

    # ---------------------------
    # Node Group
    # ---------------------------
    EKSNodeRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: "2012-10-17"
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: ec2.amazonaws.com
                      Action: sts:AssumeRole
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
                - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
                - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-node-role"

    EKSNodeGroup:
        Type: AWS::EKS::Nodegroup
        DependsOn: EKSCluster
        Properties:
            ClusterName: !Ref ClusterName
            NodeRole: !GetAtt EKSNodeRole.Arn
            ScalingConfig:
                MinSize: !Ref MinCapacity
                DesiredSize: !Ref DesiredCapacity
                MaxSize: !Ref MaxCapacity
            Subnets:
                - !Ref PrivateSubnet1
                - !Ref PrivateSubnet2
            InstanceTypes:
                - !Ref NodeInstanceType
            AmiType: AL2_x86_64
            DiskSize: 20
            Tags:
                - Key: Name
                  Value: !Sub "${ClusterName}-nodegroup"

Outputs:
    ClusterName:
        Description: Name of the EKS Cluster
        Value: !Ref ClusterName

    VPCId:
        Description: The VPC ID
        Value: !Ref VPC

    PublicSubnet1Id:
        Description: Public Subnet 1 ID
        Value: !Ref PublicSubnet1

    PublicSubnet2Id:
        Description: Public Subnet 2 ID
        Value: !Ref PublicSubnet2

    PrivateSubnet1Id:
        Description: Private Subnet 1 ID
        Value: !Ref PrivateSubnet1

    PrivateSubnet2Id:
        Description: Private Subnet 2 ID
        Value: !Ref PrivateSubnet2
